plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }
}

dependencies {
    implementation rootProject.ext.Tripartite_Library["aspectJ"]
    compileOnly rootProject.ext.Official_Library["appcompat"]
    if (CITING_THE_SOURCE_CODE.toBoolean()){
        api project(path: ':Library:Plugin:AopPlugin:AopPlugin-Annotation')
        implementation project(path: ':Library:Plugin:AopPlugin:AopPlugin-Compiler')
        compileOnly project(path: ':Library:PaintedSkin')
    }else {
        api rootProject.ext.Tripartite_Library["skin_apa"]
        implementation rootProject.ext.Tripartite_Library["skin_apc"]
        compileOnly rootProject.ext.Tripartite_Library["paintedskin"]
    }
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'org.alee.component.skin'
                artifactId = 'auto-plugin'
                version = '\"${LOCAL_VERSION_NAME}\"'
            }
        }
    }
}
